version: '3.8'

services:
  mongo1:
    image: mongo:6
    container_name: mongo1
    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all" ]
    ports:
      - "27017:27017"
    networks:
      - mongo-net

  mongo2:
    image: mongo:6
    container_name: mongo2
    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all" ]
    ports:
      - "27018:27017" # Map mongo2's 27017 to host's 27018
    networks:
      - mongo-net

  mongo3:
    image: mongo:6
    container_name: mongo3
    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all" ]
    ports:
      - "27019:27017" # Map mongo3's 27017 to host's 27019
    networks:
      - mongo-net

  mongo-init:
    image: mongo:6
    container_name: mongo-init
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./initiate_replica_set.sh:/scripts/initiate_replica_set.sh
    entrypoint: [ "bash", "/scripts/initiate_replica_set.sh" ]
    networks:
      - mongo-net

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINURL=mongodb://admin:adminpassword@mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=rs0
      - ME_CONFIG_MONGODB_SERVER=mongo1
      - ME_CONFIG_MONGODB_PORT=27017
    networks:
      - mongo-net

  node-dashboard:
    build: ./dashboard
    volumes:
      - ./dashboard:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net

  node-generator:
    build: ./data_generator
    volumes:
      - ./data_generator:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net

networks:
  mongo-net:
    driver: bridge